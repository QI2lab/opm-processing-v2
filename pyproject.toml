# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.hatch.metadata]
allow-direct-references = true

# https://peps.python.org/pep-0621/
[project]
name = "opm-processing-v2"
version = "0.5.0"
description = "qi2lab OPM post-processing package v2"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Douglas Shepherd", email = "douglas.shepherd@asu.edu" }]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
# add your package dependencies here
dependencies = [
    "numpy",
    "numba",
    "tbb",
    "tqdm",
    "ryomen",
    "tensorstore",
    "napari[pyqt6]",
    "napari-ome-zarr",
    "typer",
    "cmap",
    "zarr",
    "psfmodels",
    "tifffile",
    "matplotlib",
    "nvidia-cublas-cu12",
    "nvidia-cuda-cupti-cu12",
    "nvidia-cuda-runtime-cu12",
    "nvidia-cuda-nvrtc-cu12",
    "nvidia-cudnn-cu12",
    "nvidia-cufft-cu12",
    "nvidia-cufile-cu12",
    "nvidia-curand-cu12",
    "nvidia-cusolver-cu12",
    "nvidia-cusparse-cu12",
    "nvidia-cusparselt-cu12",
    "nvidia-nccl-cu12",
    "nvidia-nvjitlink-cu12",
    "nvidia-nvtx-cu12",
    "cucim-cu12",
    "cupy-cuda12x",
    "jax[cuda12_local]==0.4.38; sys_platform == 'linux'",
    "basicpy @ git+https://github.com/QI2lab/BaSiCPy.git@main",
    "ome-zarr @ git+https://github.com/ome/ome-zarr-py.git@refs/pull/404/head"
]

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
# "extras" (e.g. for `pip install .[test]`)
[project.optional-dependencies]
# add dependencies used for testing here
test = ["pytest", "pytest-cov"]

# add anything else you like to have in your dev environment here
dev = [
    "ipython",
    "pdbpp",  # https://github.com/pdbpp/pdbpp
    "rich",  # https://github.com/Textualize/rich
]

[project.urls]
homepage = "https://github.com/qi2lab/opm-processing-v2"
repository = "https://github.com/qi2lab/opm-processing-v2"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# same as console_scripts entry point
[project.scripts]
setup-cuda = "opm_processing.setup_cuda:main"
deskew = "opm_processing.deskew:main"
display = "opm_processing.display:main"
fuse = "opm_processing.fuse:main"

# [project.entry-points."some.group"]
# tomatoes = "opm_processing:main_tomatoes"

[tool.ruff]
ignore = ["E402"]


# https://docs.pytest.org/
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]

[tool.coverage.run]
source = ["opm_processing"]

# https://github.com/mgedmin/check-manifest#configuration
# add files that you want check-manifest to explicitly ignore here
# (files that are in the repo but shouldn't go in the package)
[tool.check-manifest]
ignore = [
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
]
